{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/services/APIServiceClient.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {routing} from './app.routing';\nimport {APIServiceClient} from './services/APIServiceClient';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    routing\n  ],\n  providers: [APIServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"p {\\r\\n  color: darkred;\\r\\n}\\r\\n\\r\\n#sunrise {\\r\\n  color: #eed75b;\\r\\n}\\r\\n\\r\\n#sunset {\\r\\n  color: #ebb838;\\r\\n}\\r\\n\"","module.exports = \"<br/>\\n<br/>\\n<div class=\\\"container border-bottom border-dark\\\">\\n  <br/>\\n  <div class=\\\"text-center\\\">\\n  <h2 ><strong> <span id=\\\"sunrise\\\">Sunrise </span> | <span id=\\\"sunset\\\">Sunset </span></strong></h2>\\n  <!--<p> This is a simple Angular application ... </p>-->\\n  </div>\\n  <br/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form class=\\\"input-group flex flex-nowrap\\\" #form1=\\\"ngForm\\\" (ngSubmit)=\\\"setCenter()\\\">\\n        <div class=\\\"\\\">\\n          <input size=\\\"40\\\" [(ngModel)]=\\\"city\\\" class=\\\"form-control\\\" name=\\\"city\\\" placeholder=\\\"Enter city name\\\" required/>\\n        </div>\\n        <div class=\\\"btn-group input-group-append\\\">\\n          <button (click)=\\\"getLocation()\\\" type=\\\"submit\\\" class=\\\"btn btn-dark\\\" [disabled]=\\\"form1.invalid\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n          <button (click)=\\\"setCurrentLocation()\\\" title=\\\"Get data for current location\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-secondary\\\"><i class=\\\"fa fa-user\\\"></i></button>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <form class=\\\"input-group flex flex-nowrap\\\" #form2=\\\"ngForm\\\" (ngSubmit)=\\\"setCenter()\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"latitude\\\" [(ngModel)]=\\\"lat\\\" placeholder=\\\"Enter latitude\\\" required>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"longitude\\\" [(ngModel)]=\\\"lng\\\" placeholder=\\\"Enter longitude\\\" required>\\n        <div class=\\\"btn-group input-group-append\\\">\\n        <button (click)=\\\"getData()\\\" type=\\\"submit\\\" class=\\\"btn btn-dark \\\" [disabled]=\\\"form2.invalid\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <br/>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3>\\n          <div #gmap style=\\\"width:100%;height:400px\\\"></div>\\n        </h3>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <br/>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <div *ngIf=\\\"apiData\\\" class=\\\"float-left\\\">\\n        <h4>\\n          <span id=\\\"sunrise\\\"><i class=\\\"fa fa-sun\\\"></i>\\n            <!--<i class=\\\"fa fa-arrow-up\\\"></i>-->\\n          </span>\\n          Sunrise: <strong>{{this.apiData.results.sunrise}} </strong> UTC</h4>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <div *ngIf=\\\"apiData\\\" class=\\\"float-right\\\">\\n        <h4>\\n          <span id=\\\"sunset\\\"><i class=\\\"fa fa-sun\\\" ></i>\\n            <!--<i class=\\\"fa fa-arrow-down\\\"></i>-->\\n          </span>\\n          Sunset: <strong>{{this.apiData.results.sunset}} </strong>UTC</h4>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n\\n\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {APIServiceClient} from '../services/APIServiceClient';\nimport {} from '@types/googlemaps';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map;\n  infoWindow: google.maps.InfoWindow;\n\n  city: string;\n  lng: number;\n  lat: number;\n  location: Object;\n  apiData: Object;\n\n  constructor(private apiService: APIServiceClient) {\n  }\n\n  getLocation() {\n    this.apiService.getLocation(this.city)\n      .then(res => {\n        this.lat = res.results[0].geometry.location.lat;\n        this.lng = res.results[0].geometry.location.lng;\n        this.city = res.results[0].formatted_address;\n        this.setCenter();\n        this.getData();\n      });\n  }\n\n\n  getData() {\n    this.apiService.getAPIData(this.lat, this.lng)\n      .then(result => {\n        this.apiData = result;\n      });\n  }\n\n  setCenter() {\n    this.map.setCenter(new google.maps.LatLng(this.lat, this.lng));\n  }\n\n  setCurrentLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat =  position.coords.latitude;\n        this.lng = position.coords.longitude;\n        this.infoWindow.setPosition(new google.maps.LatLng(this.lat, this.lng));\n        this.infoWindow.setContent('You are here');\n        this.infoWindow.open(this.map);\n        this.setCenter();\n        this.getData();\n      }, function() {\n        this.handleLocationError(true, this.infoWindow, this.map.getCenter());\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      this.handleLocationError(false, this.infoWindow, this.map.getCenter());\n    }\n  }\n\n  handleLocationError(browserHasGeolocation, infoWindow, pos) {\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(browserHasGeolocation ?\n      'Error: The Geolocation service failed.' :\n      'Error: Your browser doesn\\'t support geolocation.');\n    infoWindow.open(this.map);\n  }\n\n  ngOnInit() {\n    this.city = '';\n    const mapProp = {\n      center: new google.maps.LatLng(50.4501, 30.5234),\n      zoom: 10,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n    };\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n    this.infoWindow = new google.maps.InfoWindow;\n    this.setCurrentLocation();\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class APIServiceClient {\r\n\r\n  // Sunrise sunset API\r\n  getAPIData(lat: number, lng: number) {\r\n    const url = 'https://api.sunrise-sunset.org/json?lat=' + lat + '&lng=' + lng + ' &formatted=1'\r\n    return fetch(url).then(response => response.json());\r\n  }\r\n\r\n  // Google Geocoding API\r\n  getLocation(city: String) {\r\n    const url = 'https://maps.google.com/maps/api/geocode/json?key=AIzaSyCBLdVMhMOKW4BbtLLfSZoYz_pL61Uz4Qk&address=' + city;\r\n    return fetch(url).then(response => response.json());\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}